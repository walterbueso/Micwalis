@model DevMicwalis.Models.ContactFormViewModel

@using (Html.BeginUmbracoForm<DevMicwalis.Controllers.ContactFormSurfaceController>("HandleFormSubmit"))
{
    @Html.AntiForgeryToken()
    if (TempData["EmailSent"] != null && (bool)TempData["EmailSent"])
    {
        <div class="alert alert-success">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <strong><i class="fa fa-check"></i></strong> Thank you for contacting us! We will respond to you shortly.
        </div>
    }
    else if (TempData["EmailSent"] != null && (bool)TempData["EmailSent"] == false)
    {
        <div class="alert alert-danger">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <strong><i class="fa fa-times"></i> Error!</strong> Sorry something went wrong. Please try again.
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)

    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email)

        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Message)
            @Html.TextAreaFor(m => m.Message, new { @class = "form-control", rows = "8" })
            @Html.ValidationMessageFor(m => m.Message)
        </div>

        <button type="submit" class="btn btn-ar btn-primary">Submit</button>
}


<div class="clearfix"></div>